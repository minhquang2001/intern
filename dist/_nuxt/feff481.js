/*! For license information please see LICENSES */
(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{262:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return w}));const r=(e=>e.CapacitorPlatforms=(e=>{const t=new Map;t.set("web",{name:"web"});const n=e.CapacitorPlatforms||{currentPlatform:{name:"web"},platforms:t};return n.addPlatform=(e,t)=>{n.platforms.set(e,t)},n.setPlatform=e=>{n.platforms.has(e)&&(n.currentPlatform=n.platforms.get(e))},n})(e))("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:{});r.addPlatform,r.setPlatform;var o;!function(e){e.Unimplemented="UNIMPLEMENTED",e.Unavailable="UNAVAILABLE"}(o||(o={}));class l extends Error{constructor(e,code,data){super(e),this.message=e,this.code=code,this.data=data}}const d=e=>{var t,n,r,d,c;const w=e.CapacitorCustomPlatform||null,m=e.Capacitor||{},f=m.Plugins=m.Plugins||{},h=e.CapacitorPlatforms,v=(null===(t=null==h?void 0:h.currentPlatform)||void 0===t?void 0:t.getPlatform)||(()=>null!==w?w.name:(e=>{var t,n;return(null==e?void 0:e.androidBridge)?"android":(null===(n=null===(t=null==e?void 0:e.webkit)||void 0===t?void 0:t.messageHandlers)||void 0===n?void 0:n.bridge)?"ios":"web"})(e)),y=(null===(n=null==h?void 0:h.currentPlatform)||void 0===n?void 0:n.isNativePlatform)||(()=>"web"!==v()),P=(null===(r=null==h?void 0:h.currentPlatform)||void 0===r?void 0:r.isPluginAvailable)||(e=>{const t=C.get(e);return!!(null==t?void 0:t.platforms.has(v()))||!!L(e)}),L=(null===(d=null==h?void 0:h.currentPlatform)||void 0===d?void 0:d.getPluginHeader)||(e=>{var t;return null===(t=m.PluginHeaders)||void 0===t?void 0:t.find((t=>t.name===e))}),C=new Map,E=(null===(c=null==h?void 0:h.currentPlatform)||void 0===c?void 0:c.registerPlugin)||((e,t={})=>{const n=C.get(e);if(n)return console.warn(`Capacitor plugin "${e}" already registered. Cannot register plugins twice.`),n.proxy;const r=v(),d=L(e);let c;const h=n=>{let f;const h=(...h)=>{const p=(async()=>(!c&&r in t?c=c="function"==typeof t[r]?await t[r]():t[r]:null!==w&&!c&&"web"in t&&(c=c="function"==typeof t.web?await t.web():t.web),c))().then((t=>{const c=((t,n)=>{var c,w;if(!d){if(t)return null===(w=t[n])||void 0===w?void 0:w.bind(t);throw new l(`"${e}" plugin is not implemented on ${r}`,o.Unimplemented)}{const r=null==d?void 0:d.methods.find((e=>n===e.name));if(r)return"promise"===r.rtype?t=>m.nativePromise(e,n.toString(),t):(t,r)=>m.nativeCallback(e,n.toString(),t,r);if(t)return null===(c=t[n])||void 0===c?void 0:c.bind(t)}})(t,n);if(c){const p=c(...h);return f=null==p?void 0:p.remove,p}throw new l(`"${e}.${n}()" is not implemented on ${r}`,o.Unimplemented)}));return"addListener"===n&&(p.remove=async()=>f()),p};return h.toString=()=>`${n.toString()}() { [capacitor code] }`,Object.defineProperty(h,"name",{value:n,writable:!1,configurable:!1}),h},y=h("addListener"),P=h("removeListener"),E=(e,t)=>{const n=y({eventName:e},t),r=async()=>{const r=await n;P({eventName:e,callbackId:r},t)},p=new Promise((e=>n.then((()=>e({remove:r})))));return p.remove=async()=>{console.warn("Using addListener() without 'await' is deprecated."),await r()},p},x=new Proxy({},{get(e,t){switch(t){case"$$typeof":return;case"toJSON":return()=>({});case"addListener":return d?E:y;case"removeListener":return P;default:return h(t)}}});return f[e]=x,C.set(e,{name:e,proxy:x,platforms:new Set([...Object.keys(t),...d?[r]:[]])}),x});return m.convertFileSrc||(m.convertFileSrc=e=>e),m.getPlatform=v,m.handleError=t=>e.console.error(t),m.isNativePlatform=y,m.isPluginAvailable=P,m.pluginMethodNoop=(e,t,n)=>Promise.reject(`${n} does not have an implementation of "${t}".`),m.registerPlugin=E,m.Exception=l,m.DEBUG=!!m.DEBUG,m.isLoggingEnabled=!!m.isLoggingEnabled,m.platform=m.getPlatform(),m.isNative=m.isNativePlatform(),m},c=(e=>e.Capacitor=d(e))("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:{}),w=c.registerPlugin;c.Plugins;class m{constructor(e){this.listeners={},this.windowListeners={},e&&(console.warn(`Capacitor WebPlugin "${e.name}" config object was deprecated in v3 and will be removed in v4.`),this.config=e)}addListener(e,t){this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push(t);const n=this.windowListeners[e];n&&!n.registered&&this.addWindowListener(n);const r=async()=>this.removeListener(e,t),p=Promise.resolve({remove:r});return Object.defineProperty(p,"remove",{value:async()=>{console.warn("Using addListener() without 'await' is deprecated."),await r()}}),p}async removeAllListeners(){this.listeners={};for(const e in this.windowListeners)this.removeWindowListener(this.windowListeners[e]);this.windowListeners={}}notifyListeners(e,data){const t=this.listeners[e];t&&t.forEach((e=>e(data)))}hasListeners(e){return!!this.listeners[e].length}registerWindowListener(e,t){this.windowListeners[t]={registered:!1,windowEventName:e,pluginEventName:t,handler:e=>{this.notifyListeners(t,e)}}}unimplemented(e="not implemented"){return new c.Exception(e,o.Unimplemented)}unavailable(e="not available"){return new c.Exception(e,o.Unavailable)}async removeListener(e,t){const n=this.listeners[e];if(!n)return;const r=n.indexOf(t);this.listeners[e].splice(r,1),this.listeners[e].length||this.removeWindowListener(this.windowListeners[e])}addWindowListener(e){window.addEventListener(e.windowEventName,e.handler),e.registered=!0}removeWindowListener(e){e&&(window.removeEventListener(e.windowEventName,e.handler),e.registered=!1)}}const f=e=>encodeURIComponent(e).replace(/%(2[346B]|5E|60|7C)/g,decodeURIComponent).replace(/[()]/g,escape),h=e=>e.replace(/(%[\dA-F]{2})+/gi,decodeURIComponent);class v extends m{async getCookies(){const e=document.cookie,t={};return e.split(";").forEach((e=>{if(e.length<=0)return;let[n,r]=e.replace(/=/,"CAP_COOKIE").split("CAP_COOKIE");n=h(n).trim(),r=h(r).trim(),t[n]=r})),t}async setCookie(e){try{const t=f(e.key),n=f(e.value),r=`; expires=${(e.expires||"").replace("expires=","")}`,path=(e.path||"/").replace("path=",""),o=null!=e.url&&e.url.length>0?`domain=${e.url}`:"";document.cookie=`${t}=${n||""}${r}; path=${path}; ${o};`}catch(e){return Promise.reject(e)}}async deleteCookie(e){try{document.cookie=`${e.key}=; Max-Age=0`}catch(e){return Promise.reject(e)}}async clearCookies(){try{const e=document.cookie.split(";")||[];for(const t of e)document.cookie=t.replace(/^ +/,"").replace(/=.*/,`=;expires=${(new Date).toUTCString()};path=/`)}catch(e){return Promise.reject(e)}}async clearAllCookies(){try{await this.clearCookies()}catch(e){return Promise.reject(e)}}}w("CapacitorCookies",{web:()=>new v});const y=(e,t={})=>{const output=Object.assign({method:e.method||"GET",headers:e.headers},t),n=((e={})=>{const t=Object.keys(e);return Object.keys(e).map((e=>e.toLocaleLowerCase())).reduce(((n,r,o)=>(n[r]=e[t[o]],n)),{})})(e.headers)["content-type"]||"";if("string"==typeof e.data)output.body=e.data;else if(n.includes("application/x-www-form-urlencoded")){const t=new URLSearchParams;for(const[n,r]of Object.entries(e.data||{}))t.set(n,r);output.body=t.toString()}else if(n.includes("multipart/form-data")){const form=new FormData;if(e.data instanceof FormData)e.data.forEach(((e,t)=>{form.append(t,e)}));else for(const t of Object.keys(e.data))form.append(t,e.data[t]);output.body=form;const t=new Headers(output.headers);t.delete("content-type"),output.headers=t}else(n.includes("application/json")||"object"==typeof e.data)&&(output.body=JSON.stringify(e.data));return output};class P extends m{async request(e){const t=y(e,e.webFetchExtra),n=((e,t=!0)=>e?Object.entries(e).reduce(((e,n)=>{const[r,o]=n;let l,d;return Array.isArray(o)?(d="",o.forEach((e=>{l=t?encodeURIComponent(e):e,d+=`${r}=${l}&`})),d.slice(0,-1)):(l=t?encodeURIComponent(o):o,d=`${r}=${l}`),`${e}&${d}`}),"").substr(1):null)(e.params,e.shouldEncodeUrlParams),r=n?`${e.url}?${n}`:e.url,o=await fetch(r,t),l=o.headers.get("content-type")||"";let data,d,{responseType:c="text"}=o.ok?e:{};switch(l.includes("application/json")&&(c="json"),c){case"arraybuffer":case"blob":d=await o.blob(),data=await(async e=>new Promise(((t,n)=>{const r=new FileReader;r.onload=()=>{const e=r.result;t(e.indexOf(",")>=0?e.split(",")[1]:e)},r.onerror=e=>n(e),r.readAsDataURL(e)})))(d);break;case"json":data=await o.json();break;default:data=await o.text()}const w={};return o.headers.forEach(((e,t)=>{w[t]=e})),{data:data,headers:w,status:o.status,url:o.url}}async get(e){return this.request(Object.assign(Object.assign({},e),{method:"GET"}))}async post(e){return this.request(Object.assign(Object.assign({},e),{method:"POST"}))}async put(e){return this.request(Object.assign(Object.assign({},e),{method:"PUT"}))}async patch(e){return this.request(Object.assign(Object.assign({},e),{method:"PATCH"}))}async delete(e){return this.request(Object.assign(Object.assign({},e),{method:"DELETE"}))}}w("CapacitorHttp",{web:()=>new P})}).call(this,n(35))},264:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(262);class o extends r.a{async write(e){if("undefined"==typeof navigator||!navigator.clipboard)throw this.unavailable("Clipboard API not available in this browser");if(void 0!==e.string)await this.writeText(e.string);else if(e.url)await this.writeText(e.url);else{if(!e.image)throw new Error("Nothing to write");if("undefined"==typeof ClipboardItem)throw this.unavailable("Writing images to the clipboard is not supported in this browser");try{const t=await(await fetch(e.image)).blob(),n=new ClipboardItem({[t.type]:t});await navigator.clipboard.write([n])}catch(e){throw new Error("Failed to write image")}}}async read(){if("undefined"==typeof navigator||!navigator.clipboard)throw this.unavailable("Clipboard API not available in this browser");if("undefined"==typeof ClipboardItem)return this.readText();try{const e=await navigator.clipboard.read(),t=e[0].types[0],n=await e[0].getType(t);return{value:await this._getBlobData(n,t),type:t}}catch(e){return this.readText()}}async readText(){if("undefined"==typeof navigator||!navigator.clipboard||!navigator.clipboard.readText)throw this.unavailable("Reading from clipboard not supported in this browser");return{value:await navigator.clipboard.readText(),type:"text/plain"}}async writeText(text){if("undefined"==typeof navigator||!navigator.clipboard||!navigator.clipboard.writeText)throw this.unavailable("Writting to clipboard not supported in this browser");await navigator.clipboard.writeText(text)}_getBlobData(e,t){return new Promise(((n,r)=>{const o=new FileReader;t.includes("image")?o.readAsDataURL(e):o.readAsText(e),o.onloadend=()=>{const e=o.result;n(e)},o.onerror=e=>{r(e)}}))}}const l=Object(r.b)("Clipboard",{web:()=>new o})}}]);